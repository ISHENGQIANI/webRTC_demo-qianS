package cn.teclub.ha3.coco_server.controller;

import cn.teclub.ha3.coco_server.sys.StSrvGlobal;
import cn.teclub.ha3.request.StWsMessage;
import cn.teclub.ha3.utils.StObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.messaging.handler.annotation.DestinationVariable;
import org.springframework.messaging.handler.annotation.MessageMapping;
import org.springframework.messaging.simp.SimpMessagingTemplate;
import org.springframework.stereotype.Controller;

@Controller
public class StWebsocket extends StObject
{
    @Autowired
    StClientManager clientManager;

    @Autowired
    SimpMessagingTemplate simpMessagingTemplate;
    private String token = "this is a token generated by your code!";


    @MessageMapping("/group/{groupID}")
    public void group(@DestinationVariable int groupID, StWsMessage msg0) {
        log.debug("recv message to group: " + groupID +" ---- " + msg0 );
        msg0.addNote("server added: groupID=" + groupID + ",ts=" + util.getTimeStamp() );
        StWsMessage msg = msg0;
        simpMessagingTemplate.convertAndSend("/g/" + groupID,  msg);
    }


    @MessageMapping("/user/{userID}")
    public void user(@DestinationVariable long userID, StWsMessage msg0) {
        final long dst_id = msg0.getDst();
        if(dst_id != userID) {
            log.warn("diff dest IDs: dst_id[msg]" + dst_id + " != userID(request)" + userID);
        }

        log.debug("recv from: " + userID +"/"+ util.to8CharHex((int)userID) +"; msg:" + msg0 );
        msg0.addNote("[SERVER ADD]userID=" + util.to8CharHex((int)userID) + ",ts=" + util.getTimeStampMS() );
        StWsMessage msg = msg0;
        simpMessagingTemplate.convertAndSend("/u/" + userID ,  msg);
    }

    @MessageMapping("/server")
    public void server(StWsMessage msg0) {
        final long userID = msg0.getSrc();
        final StWsMessage.Command cmd = msg0.getCommand();
        log.debug("recv from: " + userID +"/"+ util.to8CharHex((int)userID) +"; msg:" + msg0 );
        final StWsMessage msg;
        switch(cmd)
        {
            case ECHO:
                msg = msg0.buildResponse(StWsMessage.Type.Allow, "[server version] " + StSrvGlobal.VERSION_INFO);
                clientManager.clientIsOnlineListener(userID);
                break;
            case UPDATE_FRIEND:
                log.error("TODO: send friend list");
                msg = msg0;
                break;
            default:
                msg = msg0;
                break;
        }
        msg.addNote("[SERVER ADD]prc_app_req_from:=" + util.to8CharHex((int)userID) + ",ts=" + util.getTimeStampMS() );
        log.debug("send response: " + msg );
        simpMessagingTemplate.convertAndSend("/u/" + userID ,  msg);
    }




}
